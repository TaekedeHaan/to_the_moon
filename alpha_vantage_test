#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Sep 30 21:29:50 2018

@author: taeke
"""

from alpha_vantage.timeseries import TimeSeries
import pandas_candlestick as candlestick
import pandas as pd

apiKey = 'B3ZCI6EJZNQSIN4D'
stockCodes = ["AAPL", "MSFT", "GOOG"]

# ts = TimeSeries(key='YOUR_API_KEY',output_format='pandas',retries='YOUR_RETRIES', indexing_type='date')
ts = TimeSeries(key= apiKey, output_format='pandas')
apple, microsoft, google = (ts.get_intraday(symbol=stockCode,interval='1min', outputsize='full') for stockCode in stockCodes)

apple = apple[0]
microsoft = microsoft[0]
google = google[0]

apple= apple.rename(index=str, columns={"1. open": "Open", "2. high": "High", "3. low": "Low", "4. close": "Close", "5. volume": "Volume"})
microsoft = microsoft.rename(index=str, columns={"1. open": "Open", "2. high": "High", "3. low": "Low", "4. close": "Close", "5. volume": "Volume"})
google = google.rename(index=str, columns={"1. open": "Open", "2. high": "High", "3. low": "Low", "4. close": "Close", "5. volume": "Volume"})

apple.index = pd.to_datetime(apple.index)
microsoft.index = pd.to_datetime(microsoft.index)
google.index = pd.to_datetime(google.index)

stocks = pd.DataFrame({"AAPL": apple["Close"],
                      "MSFT": microsoft["Close"],
                      "GOOG": google["Close"]})


print(stocks.head(2))

stocks.head() # display result
stocks.plot(grid = True)

candlestick.pandas_candlestick_ohlc(apple, adj=False, stick="day")

# df.apply(arg) will apply the function arg to each column in df, and return a DataFrame with the result
# Recall that lambda x is an anonymous function accepting parameter x; in this case, x will be a pandas Series object
stock_return = stocks.apply(lambda x: x / x[0])
# stock_return.head() - 1 # display result

stock_change = stocks.apply(lambda x: np.log(x) - np.log(x.shift(1))) # shift moves dates back by 1.
# stock_change.head() # display result


stock_return.plot(grid = True).axhline(y = 1, color = "black", lw = 2)
stock_change.plot(grid = True).axhline(y = 1, color = "black", lw = 2)

